#!/bin/bash

if [ $# -lt 1 ]; then
    echo "usage: quickpoc [addr] ([folder])"
    exit 1
elif [ $# -gt 2 ]; then
    echo "error: max 2 arguments allowed"
    exit 1
fi

address=$(cast --to-checksum-address $1)

if [ $# -eq 2 ]; then
    folder=$2
else
    name=$(curl -s --location --request GET "https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${ETHERSCAN_API_KEY}" | jq -r '.result'[0].ContractName)
    folder=$name
fi 

if [ -d ${folder} ]; then
    echo "error: folder already named $folder"
    exit 1
fi

forge init $folder --no-commit
cd $folder
rm -rf src
rm -rf script
rm test/Counter.t.sol

cast etherscan-source -d src --etherscan-api-key $ETHERSCAN_API_KEY $address

forge remappings > remappings.txt
for library in $(ls src/${name})
do
    if [ $library != contracts ]
        then
            echo "${library}/=src/${name}/${library}/" >> remappings.txt
    fi
done

touch test/POC.t.sol

echo "// SPDX-License-Identifier: MIT" >> test/POC.t.sol
echo "pragma solidity ^0.8.0;" >> test/POC.t.sol
echo "" >> test/POC.t.sol
echo 'import "forge-std/Test.sol";' >> test/POC.t.sol
for file in $(find src -type f)
do
    echo "import \"../$file\";" >> test/POC.t.sol
done
echo "" >> test/POC.t.sol
echo "contract ${name}POC is Test {" >> test/POC.t.sol
echo "  ${name} c = ${name}($address);" >> test/POC.t.sol
echo "" >> test/POC.t.sol
echo "  function test${name}POC() public {" >> test/POC.t.sol
echo "      vm.createSelectFork('${ETH_RPC_URL}');" >> test/POC.t.sol
echo "      assert(address(c) == $address);" >> test/POC.t.sol
echo "  }" >> test/POC.t.sol
echo "}" >> test/POC.t.sol

echo "cd ${name}" | pbcopy 
